"""
给定一个非负整数 n，计算各位数字都不同的数字 x 的个数，其中 0 ≤ x < 10n 。

示例:

输入: 2
输出: 91
解释: 答案应为除去 11,22,33,44,55,66,77,88,99 外，在 [0,100) 区间内的所有数字。
"""


class Solution(object):
    def countNumbersWithUniqueDigits(self, n):
        """
        :type n: int
        :rtype: int
        """
        if n == 0:
            return 1
        # 例如n = 4， 表示最多到4位数，那么我们要构造没有重复的数
        # 就等于是每一位要挑选一个数字放，我们有0-9十种选择
        # n = 4 -> 9 * 9 * 8 * 7, 第一个数字因为不能选0.所以只有9种选择
        # 当n > 10的时候，这个数字就必然会发生重复，因为每一位都放不一样的话，也就只能放十个
        n = min(n, 10)

        dp = [0] * (n)

        # 第一个数字只有1-9 这九种选择
        dp[0] = 9

        for i in range(1, n):
            # n = 3, 9987 7 = 10-3
            # n = 4, 99876 6 = 10-4
            dp[i] = dp[i - 1] * (10 - i)

        # 加的1是数字0这种可能性
        return sum(dp) + 1

# https://www.acwing.com/video/1734/
