"""
在无限的整数序列 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, ...中找到第 n 个数字。
注意:
n 是正数且在32位整数范围内 ( n < 2^31)。

示例 2:

输入:
11

输出:
0

说明:
第11个数字在序列 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, ... 里是0，它是10的一部分。
"""
class Solution(object):
    def findNthDigit(self, n):
        """
        :type n: int
        :rtype: int
        """
        """
        k           t       换成序列是多少个数 
        1  1~9      9个数    9*1
        2  10~99    90个数   90*2
        3  100~999  900个数  900*2
        """

        # 目前走到几位数
        k = 1

        # 当前位数范围里，有多少个数字
        t = 9

        # 在只有一位时，是从1开始
        # 有2位时，从10开始。。。
        s = 1

        # 经过第一步计算我们可以得到第 365 个数字表示的数是三位数
        # n = 365 - 9 - 90*2 = 176, k = 3, 此时n=176表示目标数字是三位数中的第176个数字。
        while n > k * t:
            n -= k * t
            # k 每次+1
            k += 1
            # t 每次*10
            t *= 10
            s *= 10

        # n是在k位的第几个数呢？应该是n/k向上取整，例如176，是在第59个三位数中的第二个数
        # 174 = 3 * 58
        # 又因为s是从1开始的，9 + 90 = 99, 所以轮到三位数的时候，应该从99开始算，而我们从100
        # 开始算，所以要-1
        # 我们设目标数字所在的数为s，计算得到n = 100 + up(176//3) - 1 = 158
        s += (n + k - 1) // k - 1

        # 最后我们要知道，n=365是在158的哪一位上
        # idx = 158 % 3 = 2, 说明目标是158的第二个数字，输出5
        idx = n % k

        return str(s)[idx - 1]

# 代码https://www.acwing.com/video/1796/
# 讲解https://leetcode-cn.com/problems/nth-digit/solution/xiang-jie-zhao-gui-lu-by-z1m/
